полтергейст
«Действительно, лучше отложить, иначе мы либо слишком мало завершим торопясь, либо слишком долго будем бродить».
- Тертуллиан
Что это?
Объекты Poltergeist обычно являются результатом кода, который был реализован для решения проблемы временной архитектуры, но
это оставалось в кодовой базе дольше, чем должно быть.
Почему это не так?
Плотность кода, которую вы должны поддерживать, часто связана с частотой ошибок, которые вам, возможно, придется исправлять каждый раз
Вы делаете изменения. Еще один побочный эффект наличия классов-призраков, преследующих вашу базу кода, заключается в том, что это может вызвать страх перед
внесение изменений из-за того, что может произойти с неизвестными объектами, которые появляются в неподходящий момент.
В чем причина?
Объекты и классы полтергейста, которые можно назвать призраками, являются результатом плохих намерений, идущих вразрез. Часто их
классы были реализованы, чтобы решить временную архитектурную проблему, но у программиста никогда не было возможности
завершить их дизайн, и, таким образом, вы получите объекты в памяти, которые присутствуют, но причина их существования не
очевидный.
Как этого избежать?
Вот несколько советов, которые могут помочь вам избежать этого анти-паттерна:
• Не используйте шаблоны проектирования, которые вы не совсем понимаете
• Планирование еженедельных проверок кодовой базы и удаление устаревшего кода
• Использовать стратегии ветвления контроля версий для управления рефакторингом важных компонентов.
• Добавьте комментарии TODO в свой код и попросите команду просмотреть их и регулярно принимать меры
• Напишите документацию перед внедрением новой архитектуры, чтобы ваша команда могла рассмотреть ваш план и
дать вам отзыв, прежде чем вносить изменения
Быть минималистом - хорошее мышление для программиста. Код может быть сложным, но он никогда не должен быть раздут
вещи, которые бесполезны. Всегда сосредотачивайтесь на том, что важно, и удаляйте то, что не важно.

https://habr.com/ru/post/217847/