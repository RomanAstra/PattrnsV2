﻿Ложное мастерство
«Если бы люди знали, как усердно я работал, чтобы получить свое мастерство, это не казалось бы таким чудесным».
- Микеланджело
Что это?
Программисты имеют доступ к большому количеству информации, инструментов и библиотек, которые позволяют им разрабатывать все, что они
хотят с легкостью. Как следствие, эти преимущества заставляют многих начинающих разработчиков полагать, что они
мастера своего дела, когда они просто копируют и вставляют работу других.
Почему это не так?
Ничто не препятствует вашей способности учиться больше, чем вера в то, что вы уже все знаете. Это опасно
мышление ослепляет вас и делает невозможным обработку обратной связи. В результате вы никогда не получите
прогресс, и вы останетесь посредственным программистом до конца своей карьеры, даже если у вас есть такие титулы, как
старший или технический директор.
В чем причина?
Основной причиной преждевременного разочарования в мастерстве над вашим ремеслом является то, что такие инструменты, как движок Unity
упростил процесс создания игр до такой степени, что почти каждый может это сделать. Но это означает, что мало кто понимает, что
происходит под капотом движка с точки зрения инструментов или языка программирования, который они используют.
Так, например, то, что вы можете написать программу на C #, не делает вас экспертом по C #, но знание
тонкости языковых библиотек сведут вас в одну.
Как этого избежать?
Ниже приведен список профессиональных привычек, которые помогут вам избежать попадания в ловушку этого анти-паттерна:
• Учитесь, учитесь и никогда не прекращайте учиться.
• Избегайте охоты за такими званиями, как старший, технический руководитель или технический директор, и вместо этого сосредоточьтесь на том, чтобы получить истинное мастерство над своим
крафт.
• Каждый раз, когда вы используете новый инструмент, библиотеку и язык, изучите как можно больше о его происхождении, а также
его тонкости.
• Смирись каждый день. Примите, что вы не знаете всего и что вам понадобится несколько десятилетий, чтобы
стать настоящим старшим программистом.
• Учите, пишите в блоге и отвечайте на технические вопросы на форумах. Другими словами, передать знания, которые вы
знать, а также поглощать новую информацию. Этот подход поможет вам подтвердить и структурировать ваше обучение.
Названия должностей, выданные при запуске, не эквивалентны тем, которые даны в крупной корпорации. Так что не удивляйтесь, когда
переходя от небольшой инди-студии к студии AAA, в которой вы в конечном итоге играете младшую роль. Причина проста:
труднее получить старшинство в большой команде, потому что вы конкурируете с большим количеством программистов за лучшие позиции.